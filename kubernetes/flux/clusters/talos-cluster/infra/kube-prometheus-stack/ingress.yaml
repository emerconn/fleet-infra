# prometheus-ingress-tls
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: prometheus-ingress-tls
  namespace: kube-prometheus-stack
spec:
  secretName: prometheus-ingress-tls
  issuerRef:
    name: letsencrypt-dns01-issuer
    kind: ClusterIssuer
  dnsNames:
  - prometheus.homelab.emerconnelly.com
---
# grafana-ingress-tls
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: grafana-ingress-tls
  namespace: kube-prometheus-stack
spec:
  secretName: grafana-ingress-tls
  issuerRef:
    name: letsencrypt-dns01-issuer
    kind: ClusterIssuer
  dnsNames:
  - grafana.homelab.emerconnelly.com
---
# shared redirect middleware
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: https-redirect
  namespace: kube-prometheus-stack
spec:
  redirectScheme:
    scheme: https
    permanent: true
---
# promethues http ingress
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: prometheus-http
  namespace: kube-prometheus-stack
spec:
  entryPoints:
  - web
  routes:
  - match: Host(`prometheus.homelab.emerconnelly.com`)
    kind: Rule
    middlewares:
    - name: https-redirect
    services:
    - name: noop@internal
      kind: TraefikService
---
# promethues https ingress
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: prometheus-https
  namespace: kube-prometheus-stack
spec:
  entryPoints:
  - websecure
  routes:
  - match: Host(`prometheus.homelab.emerconnelly.com`)
    kind: Rule
    services:
    - name: kube-prometheus-stack-prometheus
      port: 9090
      passHostHeader: true
      sticky:
        cookie:
          name: traefik
          secure: true
          httpOnly: true
          sameSite: lax
  tls:
    secretName: prometheus-ingress-tls
---
# grafana http ingress
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: grafana-http
  namespace: kube-prometheus-stack
spec:
  entryPoints: ["web"]
  routes:
  - match: Host(`grafana.homelab.emerconnelly.com`)
    kind: Rule
    middlewares:
    - name: https-redirect
    services:
    - name: noop@internal
      kind: TraefikService
---
# grafana https ingress
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: grafana-https
  namespace: kube-prometheus-stack
spec:
  entryPoints: ["websecure"]
  routes:
  - match: Host(`grafana.homelab.emerconnelly.com`)
    kind: Rule
    services:
    - name: kube-prometheus-stack-grafana
      port: 80
      passHostHeader: true
      sticky:
        cookie:
          name: traefik
          secure: true
          httpOnly: true
          sameSite: lax
  tls:
    secretName: grafana-ingress-tls
