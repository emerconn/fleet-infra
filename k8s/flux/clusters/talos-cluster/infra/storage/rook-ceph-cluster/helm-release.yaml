apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
  namespace: flux-system
spec:
  values:
    operatorNamespace: rook-ceph
    clusterName: rook-ceph
    monitoring:
      enabled: true
      createPrometheusRules: true
      rulesNamespaceOverride: kube-prometheus-stack
    toolbox:
      enabled: true
      image: docker.io/rook/ceph:v1.16.2 # same image as the operator, includes s5cmd
    cephClusterSpec:
      dashboard:
        enabled: true
        ssl: false
      mgr:
        modules:
        - name: rook
          enabled: true
        - name: k8sevents
          enabled: true
      # removeOSDsIfOutAndSafeToRemove: true
      # cephBlockPools: [ "" ]
      # cephObjectStores: [ "" ]
      # cephFileSystems:
      # - name: ceph-filesystem
      #   spec:
      #     metadataPool:
      #       replicated:
      #         size: 3
      #     dataPools:
      #     - failureDomain: host
      #       replicated:
      #         size: 3
      #       name: data0
      #     metadataServer:
      #       activeCount: 1
      #       activeStandby: true
      #       resources:
      #         limits:
      #           memory: "4Gi"
      #         requests:
      #           cpu: "1000m"
      #           memory: "4Gi"
      #       priorityClassName: system-cluster-critical
      #   storageClass:
      #     enabled: true
      #     isDefault: false
      #     name: ceph-ext4-retain
      #     pool: data0
      #     reclaimPolicy: Retain
      #     allowVolumeExpansion: true
      #     volumeBindingMode: "Immediate"
      #     annotations: {}
      #     labels: {}
      #     mountOptions: []
      #     parameters:
      #       # The secrets contain Ceph admin credentials.
      #       csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
      #       csi.storage.k8s.io/provisioner-secret-namespace: "{{ .Release.Namespace }}"
      #       csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
      #       csi.storage.k8s.io/controller-expand-secret-namespace: "{{ .Release.Namespace }}"
      #       csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
      #       csi.storage.k8s.io/node-stage-secret-namespace: "{{ .Release.Namespace }}"
      #       # Specify the filesystem type of the volume. If not specified, csi-provisioner
      #       # will set default as `ext4`. Note that `xfs` is not recommended due to potential deadlock
      #       # in hyperconverged settings where the volume is mounted on the same node as the osds.
      #       csi.storage.k8s.io/fstype: ext4
