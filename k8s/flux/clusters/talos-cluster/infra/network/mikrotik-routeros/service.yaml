# some cool shit going on here.
# it's headless service. no cluster IP, k8s proxying, or load-balancing.
# there's no selector, so there's no pods to create endpoints with.
# so we define our own endpoint, which is an IP external to the cluster.
# basically, this is just using the k8s CNI as a reverse-proxy.
# tight, tight, tight.
apiVersion: v1
kind: Service
metadata:
  name: mikrotik-routeros
  namespace: mikrotik-routeros
spec:
  type: ClusterIP
  clusterIP: None # https://kubernetes.io/docs/concepts/services-networking/service/#headless-services
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: v1
kind: Endpoints
metadata:
  name: mikrotik-routeros
  namespace: mikrotik-routeros
subsets:
- addresses:
  - ip: 172.21.0.1
  ports:
  - port: 80
